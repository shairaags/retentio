updatePickerInput(session, "multi_analytes", choices = unique(df_flagged$Compound))
showNotification("✅ Fichiers Tenax chargés avec succès !", type = "message")
})
}
# ---- APP ----
shinyApp(ui, server)
#10:30 -> 07/05/2025
#14:45 -> 12/05/2025
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
# 📁 Dossier contenant les fichiers bruts collés
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
# 📁 Dossier de sortie (sera créé automatiquement)
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📜 Lister tous les fichiers CSV du dossier
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
# 📦 Boucle sur chaque fichier CSV brut
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # Ignorer les fichiers sans tableau détectable
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (nrow(data_sub) == 0) next
# ⚠️ Certaines tables n'ont pas assez de colonnes
if (ncol(data_sub) < 4) next
d <- data.frame(
Sample = data_sub[, 2],
Name = data_sub[, 1],
Area = data_sub[, 4],
stringsAsFactors = FALSE
)
nist_row <- unique(d$Sample[grepl("NIST", d$Sample)])
if (length(nist_row) == 0) next
date_raw <- strsplit(nist_row[1], "_", fixed = TRUE)[[1]][2]
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
}
}
message("✅ Tous les fichiers ont été exportés dans : ", output_dir)
# 📁 Dossier contenant les fichiers bruts à traiter
dir_path <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
# 📂 Créer le sous-dossier de sortie
export_dir <- file.path(dir_path, "csv_export")
dir.create(export_dir, showWarnings = FALSE)
# 📄 Liste tous les fichiers CSV du dossier
files <- list.files(dir_path, pattern = "\\.csv$", full.names = TRUE)
# 🔁 Boucle sur les fichiers
for (file in files) {
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
if (ncol(data_sub) < 4) next
data_sub <- data_sub[data_sub[, 1] != "", ]
if (nrow(data_sub) == 0) next
d <- data.frame(Sample = data_sub[, 2], Name = data_sub[, 1], Area = data_sub[, 4])
nist_row <- unique(d$Sample[grepl("NIST", d$Sample)])
if (length(nist_row) == 0) next
date_raw <- strsplit(nist_row[1], "_", fixed = TRUE)[[1]][2]
out_file <- file.path(export_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = out_file, row.names = FALSE)
}
}
print(nist_row)
print(nist_row)
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
if (ncol(data_sub) < 4) next
data_sub <- data_sub[data_sub[, 1] != "", ]
if (nrow(data_sub) == 0) next
d <- data.frame(Sample = data_sub[, 2], Name = data_sub[, 1], Area = data_sub[, 4])
nist_row <- unique(d$Sample[grepl("NIST", d$Sample)])
if (length(nist_row) == 0) next
date_raw <- strsplit(nist_row[1], "_", fixed = TRUE)[[1]][2]
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
}
}
message("✅ Export terminé. Vérifie le dossier : ", output_dir)
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
if (ncol(data_sub) < 4) next
data_sub <- data_sub[data_sub[, 1] != "", ]
if (nrow(data_sub) == 0) next
d <- data.frame(Sample = data_sub[, 2], Name = data_sub[, 1], Area = data_sub[, 4])
# 👉 Nouveau : on extrait la date depuis le NOM DU FICHIER
file_basename <- basename(file)
date_raw <- str_extract(file_basename, "\\d{8}")  # ex: 25042025
if (is.na(date_raw)) next  # sécurité
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
}
}
message("✅ Terminé ! Résultats dans : ", output_dir)
# 👀 Ouvre un aperçu des fichiers générés
exported_files <- list.files(output_dir, full.names = TRUE)
first_file <- exported_files[1]
if (!is.na(first_file)) {
df_preview <- read.csv2(first_file)
View(df_preview)
}
explorer(output_dir)
explorer(output_dir)
system2("explorer", output_dir)
system2("explorer", output_dir)
length(files)
# 📁 Dossier d’entrée
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
# 📁 Dossier de sortie (sera créé si besoin)
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📄 Lister tous les fichiers CSV (insensible à la casse)
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Traitement de chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
# 🔍 Identifier les débuts de tableaux collés
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # aucun tableau détecté
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (ncol(data_sub) < 4 || nrow(data_sub) == 0) next
d <- data.frame(
Sample = data_sub[, 2],
Name   = data_sub[, 1],
Area   = data_sub[, 4],
stringsAsFactors = FALSE
)
# 📆 Extraire date du NOM DU FICHIER
file_basename <- basename(file)
date_raw <- stringr::str_extract(file_basename, "\\d{8}")  # format 25042025
if (is.na(date_raw)) next
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
}
}
message("✅ Terminé ! Vérifie les fichiers dans : ", output_dir)
files <- list.files("C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC",
pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
file.info(files)
# 📦 Charge les packages nécessaires
library(readxl)
library(writexl)
# 📁 Dossier contenant tes faux CSV
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
# 📂 Dossier de sortie
output_dir <- file.path(input_dir, "csv_export_excel_fixes")
dir.create(output_dir, showWarnings = FALSE)
# 🔍 Liste tous les fichiers avec extension .csv, .xls, .xlsx
files <- list.files(input_dir, pattern = "\\.(csv|xlsx|xls)$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Conversion de chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
# Essaye Excel en priorité (au cas où fichier Excel renommé)
success <- FALSE
try({
sheets <- excel_sheets(file)
df <- read_excel(file, sheet = sheets[1])
success <- TRUE
}, silent = TRUE)
# Si Excel échoue, tente CSV standard
if (!success) {
try({
df <- read.csv2(file, stringsAsFactors = FALSE)
success <- TRUE
}, silent = TRUE)
}
# Si toujours pas lisible, on skippe
if (!success) {
message("❌ Échec de lecture : ", basename(file))
next
}
# Sauvegarde propre en CSV
output_file <- file.path(output_dir, paste0(tools::file_path_sans_ext(basename(file)), "_clean.csv"))
write.csv2(df, file = output_file, row.names = FALSE)
message("✅ Exporté vers : ", output_file)
}
message("🎉 Tous les fichiers valides ont été convertis dans : ", output_dir)
# 📁 Dossier d’entrée
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
# 📁 Dossier de sortie (sera créé si besoin)
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📄 Lister tous les fichiers CSV (insensible à la casse)
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Traitement de chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
# 🔍 Identifier les débuts de tableaux collés
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # aucun tableau détecté
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (ncol(data_sub) < 4 || nrow(data_sub) == 0) next
d <- data.frame(
Sample = data_sub[, 2],
Name   = data_sub[, 1],
Area   = data_sub[, 4],
stringsAsFactors = FALSE
)
# 📆 Extraire date du NOM DU FICHIER
file_basename <- basename(file)
date_raw <- stringr::str_extract(file_basename, "\\d{8}")  # format 25042025
if (is.na(date_raw)) next
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
}
}
message("✅ Terminé ! Vérifie les fichiers dans : ", output_dir)
YOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
# 📁 Dossier contenant les fichiers Excel convertis
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC/csv_export_excel_fixes"
# 📂 Dossier de sortie final
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📄 Liste tous les fichiers CSV
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Boucle sur chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # aucun tableau détecté
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (ncol(data_sub) < 4 || nrow(data_sub) == 0) next
d <- data.frame(
Sample = data_sub[, 2],
Name   = data_sub[, 1],
Area   = data_sub[, 4],
stringsAsFactors = FALSE
)
# 📆 Extraire la date du nom du fichier
file_basename <- basename(file)
date_raw <- stringr::str_extract(file_basename, "\\d{8}")  # format 25042025
if (is.na(date_raw)) next
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
message("✅ Exporté : ", output_file)
}
}
message("🎉 Tous les fichiers ont été exportés dans : ", output_dir)
library(shiny); runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
library(shiny); runApp('Retentio.R')
runApp('Retentio.R')
# 📦 Charge les packages nécessaires
library(readxl)
# 📁 Dossier contenant tes faux CSV
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC"
# 📂 Dossier de sortie
output_dir <- file.path(input_dir, "csv_export_excel_fixes")
dir.create(output_dir, showWarnings = FALSE)
# 🔍 Liste tous les fichiers avec extension .csv, .xls, .xlsx
files <- list.files(input_dir, pattern = "\\.(csv|xlsx|xls)$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Conversion de chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
# Essaye Excel en priorité (au cas où fichier Excel renommé)
success <- FALSE
try({
sheets <- excel_sheets(file)
df <- read_excel(file, sheet = sheets[1])
success <- TRUE
}, silent = TRUE)
# Si Excel échoue, tente CSV standard
if (!success) {
try({
df <- read.csv2(file, stringsAsFactors = FALSE)
success <- TRUE
}, silent = TRUE)
}
# Si toujours pas lisible, on skippe
if (!success) {
message("❌ Échec de lecture : ", basename(file))
next
}
# Sauvegarde propre en CSV
output_file <- file.path(output_dir, paste0(tools::file_path_sans_ext(basename(file)), "_clean.csv"))
write.csv2(df, file = output_file, row.names = FALSE)
message("✅ Exporté vers : ", output_file)
}
message("🎉 Tous les fichiers valides ont été convertis dans : ", output_dir)
# 📁 Dossier contenant les fichiers Excel convertis
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46/Suivi_Els_Tenax_GCxGC/csv_export_excel_fixes"
# 📂 Dossier de sortie final
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📄 Liste tous les fichiers CSV
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Boucle sur chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # aucun tableau détecté
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (ncol(data_sub) < 4 || nrow(data_sub) == 0) next
d <- data.frame(
Sample = data_sub[, 2],
Name   = data_sub[, 1],
Area   = data_sub[, 4],
stringsAsFactors = FALSE
)
# 📆 Extraire la date du nom du fichier
file_basename <- basename(file)
date_raw <- stringr::str_extract(file_basename, "\\d{8}")  # format 25042025
if (is.na(date_raw)) next
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
message("✅ Exporté : ", output_file)
}
}
message("🎉 Tous les fichiers ont été exportés dans : ", output_dir)
# 📁 Dossier contenant les fichiers Excel convertis
input_dir <- "C:/Users/Masspeclab/Desktop/15052025 10h46 et après/Suivi_Els_Tenax_GCxGC"
# 📂 Dossier de sortie final
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📄 Liste tous les fichiers CSV
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Boucle sur chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # aucun tableau détecté
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (ncol(data_sub) < 4 || nrow(data_sub) == 0) next
d <- data.frame(
Sample = data_sub[, 2],
Name   = data_sub[, 1],
Area   = data_sub[, 4],
stringsAsFactors = FALSE
)
# 📆 Extraire la date du nom du fichier
file_basename <- basename(file)
date_raw <- stringr::str_extract(file_basename, "\\d{8}")  # format 25042025
if (is.na(date_raw)) next
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
message("✅ Exporté : ", output_file)
}
}
message("🎉 Tous les fichiers ont été exportés dans : ", output_dir)
library(readxl)
# 📁 Dossier contenant les fichiers Excel/CSV
input_dir <- "C:/Users/Masspeclab/Desktop/nopi/Suivi_Els_Tenax_GCxGC"
# 📂 Dossier de sortie intermédiaire
output_dir <- file.path(input_dir, "csv_export_excel_fixes")
dir.create(output_dir, showWarnings = FALSE)
# 🔍 Liste tous les fichiers Excel ou CSV
files <- list.files(input_dir, pattern = "\\.(csv|xlsx|xls)$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Conversion de chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
# Essaye Excel d'abord
success <- FALSE
try({
sheets <- excel_sheets(file)
df <- read_excel(file, sheet = sheets[1])
success <- TRUE
}, silent = TRUE)
# Sinon tente en CSV
if (!success) {
try({
df <- read.csv2(file, stringsAsFactors = FALSE)
success <- TRUE
}, silent = TRUE)
}
# Si toujours pas lisible, skip
if (!success) {
message("❌ Échec de lecture : ", basename(file))
next
}
# Sauvegarde CSV propre
output_file <- file.path(output_dir, paste0(tools::file_path_sans_ext(basename(file)), "_clean.csv"))
write.csv2(df, file = output_file, row.names = FALSE)
message("✅ Exporté vers : ", output_file)
}
message("🎉 Tous les fichiers valides ont été convertis dans : ", output_dir)
# 📁 Dossier contenant les fichiers nettoyés
input_dir <- "C:/Users/Masspeclab/Desktop/nopi/Suivi_Els_Tenax_GCxGC/csv_export_excel_fixes"
# 📂 Dossier de sortie final
output_dir <- file.path(input_dir, "csv_export")
dir.create(output_dir, showWarnings = FALSE)
# 📄 Liste les fichiers CSV propres
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE, ignore.case = TRUE)
# 🔁 Boucle sur chaque fichier
for (file in files) {
message("📄 Traitement de : ", basename(file))
data <- read.csv2(file, stringsAsFactors = FALSE)
index <- grep("Mol|Name", colnames(data))
if (length(index) == 0) next  # aucun tableau détecté
data_list <- list()
for (j in seq_along(index)) {
end_col <- if (j < length(index)) index[j + 1] - 1 else ncol(data)
data_list[[j]] <- data[, index[j]:end_col]
}
for (k in seq_along(data_list)) {
data_sub <- data_list[[k]]
data_sub <- data_sub[data_sub[, 1] != "", ]
if (ncol(data_sub) < 4 || nrow(data_sub) == 0) next
d <- data.frame(
Sample = data_sub[, 2],
Name   = data_sub[, 1],
Area   = data_sub[, 4],
stringsAsFactors = FALSE
)
# 📆 Extraire la date du nom du fichier
file_basename <- basename(file)
date_raw <- stringr::str_extract(file_basename, "\\d{8}")  # format 25042025
if (is.na(date_raw)) next
output_file <- file.path(output_dir, paste0("clean_", date_raw, ".csv"))
write.csv2(d, file = output_file, row.names = FALSE)
message("✅ Exporté : ", output_file)
}
}
message("🎉 Tous les fichiers ont été exportés dans : ", output_dir)
list.files("C:/Users/Masspeclab/Desktop/nopi/Suivi_Els_Tenax_GCxGC")
library(shiny); runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
runApp('Retentio.R')
